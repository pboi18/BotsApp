/**
 * @module QRCode
 * @package @nuintun/qrcode
 * @license MIT
 * @version 3.3.0
 * @author nuintun <nuintun@qq.com>
 * @description A pure JavaScript QRCode encode and decode library.
 * @see https://github.com/nuintun/qrcode#readme
 */

'use strict';

var tslib = require('tslib');
var QRData = require('./QRData.cjs');
var Mode = require('../common/Mode.cjs');
var UTF8 = require('../../encoding/UTF8.cjs');

/**
 * @module QR8BitByte
 * @author nuintun
 * @author Kazuhiko Arase
 */
var QRByte = /*#__PURE__*/ (function (_super) {
  tslib.__extends(QRByte, _super);
  /**
   * @constructor
   * @param {string} data
   */
  function QRByte(data, encode) {
    var _this = _super.call(this, Mode.Mode.Byte, data) || this;
    _this.encoding = -1;
    if (typeof encode === 'function') {
      var _a = encode(data),
        encoding = _a.encoding,
        bytes = _a.bytes;
      _this.bytes = bytes;
      _this.encoding = encoding;
    } else {
      _this.bytes = UTF8.encode(data);
      _this.encoding = 26 /* UTF8 */;
    }
    return _this;
  }
  /**
   * @public
   * @method writeTo
   * @param {BitBuffer} buffer
   */
  QRByte.prototype.writeTo = function (buffer) {
    var bytes = this.bytes;
    for (var _i = 0, bytes_1 = bytes; _i < bytes_1.length; _i++) {
      var byte = bytes_1[_i];
      buffer.put(byte, 8);
    }
  };
  return QRByte;
})(QRData.QRData);

exports.QRByte = QRByte;
